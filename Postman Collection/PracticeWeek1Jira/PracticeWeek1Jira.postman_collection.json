{
	"info": {
		"_postman_id": "2f60e12b-7d1d-4609-9d3e-87d62983b314",
		"name": "PracticeWeek1Jira",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "CreateNewIssue",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "a6dd1e68-6e67-45ec-814e-1261ccb54d7d",
						"exec": [
							"pm.test(\"Status code is 201\", function () {",
							"    pm.response.to.have.status(201);",
							"});",
							"pm.response.to.be.success;",
							"let statuscode = pm.response.code;",
							"console.log(\"Status code is \"+statuscode);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \r\n    \"fields\": {\r\n        \"project\": {\r\n            \"id\": \"10000\"\r\n        },\r\n        \"summary\": \"Created for Week1 practice WST\",\r\n        \r\n        \"issuetype\": {\r\n            \"id\": \"10002\"\r\n        }\r\n    }  \r\n}"
				},
				"url": {
					"raw": "https://{{server}}/{{resourse}}/issue",
					"protocol": "https",
					"host": [
						"{{server}}"
					],
					"path": [
						"{{resourse}}",
						"issue"
					]
				},
				"description": "creaing new issue on Jira"
			},
			"response": []
		},
		{
			"name": "GetIssue",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "95583e5f-5de8-4390-b6bd-d7ab7882d653",
						"exec": [
							"let response = pm.response.json();",
							"console.log(response);",
							"",
							"pm.environment.set(\"issueinitialcount\", response.issues.length);",
							"console.log(\"Initial count of issues is \" +pm.environment.get(\"issueinitialcount\"));",
							"",
							"",
							"pm.globals.set(\"key\",response.issues[0].key);",
							"console.log(\"First issue key value is \" +pm.globals.get(\"key\"));",
							"",
							"",
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.response.to.be.success;",
							"let statuscode = pm.response.code;",
							"console.log(\"Status code is \"+statuscode);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "username",
							"value": "mithugopal30@gmail.com",
							"type": "string"
						},
						{
							"key": "password",
							"value": "MITHUsri1307*",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"body": {},
				"url": {
					"raw": "https://{{server}}/{{resourse}}/search?",
					"protocol": "https",
					"host": [
						"{{server}}"
					],
					"path": [
						"{{resourse}}",
						"search"
					],
					"query": [
						{
							"key": "fields",
							"value": "summary,priority",
							"disabled": true
						},
						{
							"key": "expand",
							"value": "changelog",
							"disabled": true
						},
						{
							"key": "jql",
							"value": "key=WST",
							"disabled": true
						}
					]
				},
				"description": "Getting Jira issue"
			},
			"response": []
		},
		{
			"name": "DeleteIssue",
			"request": {
				"method": "DELETE",
				"header": [],
				"body": {},
				"url": {
					"raw": "https://{{server}}/{{resourse}}/issue/{{key}}",
					"protocol": "https",
					"host": [
						"{{server}}"
					],
					"path": [
						"{{resourse}}",
						"issue",
						"{{key}}"
					]
				},
				"description": "Deleting existing issue"
			},
			"response": []
		},
		{
			"name": "GetIssueCountAfterDelete",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "95583e5f-5de8-4390-b6bd-d7ab7882d653",
						"exec": [
							"let response = pm.response.json();",
							"console.log(response);",
							"",
							"pm.environment.set(\"issuefinalcount\", response.issues.length);",
							"let finalcount = pm.environment.get(\"issuefinalcount\");",
							"console.log(\"Final count of issues is \" +pm.environment.get(\"issuefinalcount\"));",
							"let initialcount = pm.environment.get(\"issueinitialcount\");",
							"if (initialcount===finalcount+1){",
							"    console.log(\"PASS\");",
							"}",
							"else{",
							"    console.log(\"FAIL\");",
							"}",
							"",
							"",
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.response.to.be.success;",
							"let statuscode = pm.response.code;",
							"console.log(\"Status code is \"+statuscode);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "username",
							"value": "mithugopal30@gmail.com",
							"type": "string"
						},
						{
							"key": "password",
							"value": "MITHUsri1307*",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"body": {},
				"url": {
					"raw": "https://{{server}}/{{resourse}}/search?",
					"protocol": "https",
					"host": [
						"{{server}}"
					],
					"path": [
						"{{resourse}}",
						"search"
					],
					"query": [
						{
							"key": "fields",
							"value": "summary,priority",
							"disabled": true
						},
						{
							"key": "expand",
							"value": "changelog",
							"disabled": true
						},
						{
							"key": "jql",
							"value": "key=WST",
							"disabled": true
						}
					]
				},
				"description": "Getting Jira issue"
			},
			"response": []
		},
		{
			"name": "Edit/UpdateIssue",
			"request": {
				"method": "PUT",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\"fields\":{\"summary\":\"This is a shorthand for a set operation on the summary field\"}}"
				},
				"url": {
					"raw": "https://webservicestraining.atlassian.net/rest/api/3/issue/WST-2?",
					"protocol": "https",
					"host": [
						"webservicestraining",
						"atlassian",
						"net"
					],
					"path": [
						"rest",
						"api",
						"3",
						"issue",
						"WST-2"
					],
					"query": [
						{
							"key": "notifyUsers",
							"value": "false",
							"disabled": true
						}
					]
				},
				"description": "Updating the exising issue"
			},
			"response": []
		},
		{
			"name": "GetProject",
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "https://{{server}}/{{resourse}}/project/10001",
					"protocol": "https",
					"host": [
						"{{server}}"
					],
					"path": [
						"{{resourse}}",
						"project",
						"10001"
					]
				}
			},
			"response": []
		}
	],
	"auth": {
		"type": "basic",
		"basic": [
			{
				"key": "password",
				"value": "MITHUsri1307*",
				"type": "string"
			},
			{
				"key": "username",
				"value": "mithugopal30@gmail.com",
				"type": "string"
			}
		]
	},
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"id": "54cd61a5-6d06-4195-b590-82ff734e043e",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"id": "64bdde75-8207-4541-9b3d-4618a14c0e57",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	]
}